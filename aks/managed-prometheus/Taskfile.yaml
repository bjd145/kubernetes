version: '3'

tasks:
  up:
    desc: Creates a complete Azure environment 
    cmds:
    - terraform workspace new {{.REGION}} || true
    - terraform workspace select {{.REGION}}
    - terraform init
    - task: apply
    vars: 
      REGION: '{{default "southcentralus" .CLI_ARGS}}'

  apply:
    cmds:
    - terraform apply -auto-approve -var "region={{.REGION}}" -compact-warnings
    - task: creds
    - task: deploy-configs
    - task: deploy-app
    vars: 
      REGION: '{{default "southcentralus" .CLI_ARGS}}'

  creds:
    desc: Gets AKS credential file
    cmds:
    - az aks get-credentials -g {{.RG}} -n {{.AKS}} --overwrite-existing
    - sed -i s/devicecode/azurecli/g ~/.kube/config
    vars:
      RG: 
        sh: terraform output -raw AKS_RESOURCE_GROUP
      AKS: 
        sh: terraform output -raw AKS_CLUSTER_NAME

  deploy-configs:
    desc: Deploy Prometheus configmaps
    cmds:
    - kubectl -n kube-system delete configmap ama-metrics-prometheus-config || true
    - kubectl -n kube-system create configmap ama-metrics-prometheus-config --from-file=./manifests/prometheus-config 
    - kubectl apply -f ./manifests/container-azm-ms-agentconfig.yaml
    - kubectl apply -f ./manifests/ama-metrics-settings-configmap.yaml
    - kubectl -n kube-system rollout restart deploy  ama-metrics

  deploy-app:
    desc: Deploy Otel Demo Application
    cmds:
    - kubectl apply -f ../../demo-apps/otel-prometheus/deployment.yaml

  down:
    desc: Destroys all Azure resources and cleans up Terraform
    cmds:
    - rm -rf terraform.tfstate.d .terraform.lock.hcl .terraform terraform.tfstate terraform.tfstate.backup .terraform.tfstate.lock.info
    - az group delete -n {{.RG}} --yes --no-wait || true
    vars:
      RG: 
        sh: terraform  output -raw RESOURCE_GROUP

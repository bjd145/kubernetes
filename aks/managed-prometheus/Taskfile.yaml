version: '3'

vars:
  TAGS: "Azure Managed Prometheus Demo"
  DEFAULT_REGION: canadaeast
  NODE_COUNT: 3
  SKU: "Standard_D4ads_v5"

tasks:
  default:
    cmds:
    - task --list
    
  up:
    desc: Creates a {{.TAGS}} environment
    cmds:
    - terraform workspace new {{.REGION}} || true
    - terraform workspace select {{.REGION}}
    - terraform init
    - task: apply
    - task: creds
    - task: deploy-configs
    - task: deploy-app    
    vars: 
     REGION: '{{default .DEFAULT_REGION .CLI_ARGS}}'

  apply:
    cmds:
    - terraform apply -auto-approve -compact-warnings
        -var "region={{.REGION}}" 
        -var "vm_size={{.SKU}}" 
        -var "tags={{.TAGS}}" 
        -var "node_count={{.NODE_COUNT}}" 
    vars: 
      REGION: '{{default .DEFAULT_REGION .CLI_ARGS}}'

  creds:
    desc: Gets AKS credential file
    cmds:
    - az aks get-credentials -g {{.RG}} -n {{.AKS}} --overwrite-existing
    - sed -i s/devicecode/azurecli/g ~/.kube/config
    vars:
      RG: 
        sh: terraform output -raw AKS_RESOURCE_GROUP
      AKS: 
        sh: terraform output -raw AKS_CLUSTER_NAME

  deploy-configs:
    desc: Deploy Prometheus configmaps
    cmds:
    - kubectl -n kube-system delete configmap ama-metrics-prometheus-config || true
    - kubectl apply -f ./manifests/prometheus-config.yaml
    - kubectl apply -f ./manifests/container-azm-ms-agentconfig.yaml
    - kubectl apply -f ./manifests/ama-metrics-settings-configmap.yaml
    - kubectl -n kube-system rollout restart deploy ama-metrics
    - kubectl -n kube-system rollout restart deployment ama-metrics-ksm
    - kubectl -n kube-system rollout restart daemonset ama-metrics-node
  
  deploy-app:
    desc: Deploy Demo Application
    cmds:
    - helm upgrade -i prometheus-demo 
        --set APP_INSIGHTS.CONNECTION_STRING="{{.APP_INSIGHTS_CONNECTION_STRING}}"
        --set WORKLOAD_ID.NAME="{{.WORKLOAD_ID_NAME}}"
        --set WORKLOAD_ID.CLIENT_ID="{{.WORKLOAD_ID_CLIENT_ID}}"
        --set WORKLOAD_ID.TENANT_ID="{{.WORKLOAD_ID_TENANT_ID}}"
        ../../demo-apps/otel-prometheus/chart/
    vars:
      WORKLOAD_ID_NAME: 
        sh: terraform output -raw WORKLOAD_ID_NAME
      WORKLOAD_ID_CLIENT_ID: 
        sh: terraform output -raw WORKLOAD_ID_CLIENT_ID
      WORKLOAD_ID_TENANT_ID: 
        sh: terraform output -raw WORKLOAD_ID_TENANT_ID
      APP_INSIGHTS_CONNECTION_STRING:
        sh: terraform output -raw APP_INSIGHTS_CONNECTION_STRING

  down:
    desc: Destroys all Azure resources and cleans up Terraform
    cmds:
    - az group list --tag Application="Azure Managed Prometheus Demo" --query "[].name" -o tsv | xargs -ot -n 1 az group delete -y --verbose --no-wait -n || true
    - rm -rf terraform.tfstate.d .terraform.lock.hcl .terraform terraform.tfstate terraform.tfstate.backup .terraform.tfstate.lock.info || true
    vars:
      RG: 
        sh: terraform  output -raw RESOURCE_GROUP

version: 3

tasks:
  up:
    desc: Builds end to end an AKS environment with Fleet for Patch Management Demo
    cmds:
      - task: init
      - task: apply
    vars:
      REGION: '{{default "southcentralus" .CLI_ARGS}}'

  init:
    desc: Initializes Terraform
    cmds:
      - terraform -chdir=./infrastructure/patch-demo workspace new {{.REGION}} || true
      - terraform -chdir=./infrastructure/patch-demo workspace select {{.REGION}}
      - terraform -chdir=./infrastructure/patch-demo init
    vars:
      REGION: '{{default "southcentralus" .CLI_ARGS}}'

  apply:
    desc: Applies Terraform configuration
    cmds:
      - terraform -chdir=./infrastructure/patch-demo apply -auto-approve -var "region={{.REGION}}" -var-file="environments.tfvars"
    vars:
      REGION: '{{default "southcentralus" .CLI_ARGS}}'

  plan:
    desc: Reviews Terraform plan
    cmds:
      - terraform -chdir=./infrastructure/patch-demo plan -var "region={{.REGION}}" -var-file="environments.tfvars"
    vars:
      REGION: '{{default "southcentralus" .CLI_ARGS}}'

  down:
    desc: Destroys all Azure resources and cleans up Terraform
    cmds:
      - az group list --tag Application="AKS Fleet Demo Clusters" --query "[].name" -o tsv | xargs -ot -n 1 az group delete -y --verbose --no-wait -n  || true
      - az group list --tag Application="AKS Fleet Patch Demo" --query "[].name" -o tsv | xargs -ot -n 1 az group delete -y --verbose --no-wait -n || true
      - cd ./infrastructure/patch-demo; rm -rf terraform.tfstate.d .terraform.lock.hcl .terraform terraform.tfstate terraform.tfstate.backup .terraform.tfstate.lock.info || true
